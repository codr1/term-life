package main

import (
	"fmt"
	"image"
	_ "image/jpeg" // Import this to support JPEG images
	_ "image/png"  // Import this to support PNG images
	"os"
	"os/signal"
	"syscall"

	"github.com/mattn/go-sixel"

	"github.com/gdamore/tcell/v2"
)

func main() {
	// Check if an image path was provided
	if len(os.Args) < 2 {
		fmt.Println("Usage: go run main.go <path_to_image>")
		os.Exit(1)
	}
	imagePath := os.Args[1]

	// Initialize screen
	s, err := tcell.NewScreen()
	if err != nil {
		fmt.Fprintf(os.Stderr, "%v\n", err)
		os.Exit(1)
	}

	// Defer the Fini() call to ensure it runs even if the program panics
	defer func() {
		s.Fini()
		fmt.Println("Terminal restored.")
	}()

	if err := s.Init(); err != nil {
		fmt.Fprintf(os.Stderr, "%v\n", err)
		os.Exit(1)
	}

	// Set up signal handling for graceful shutdown
	signalChan := make(chan os.Signal, 1)
	signal.Notify(signalChan, os.Interrupt, syscall.SIGTERM)
	go func() {
		<-signalChan
		s.Fini()
